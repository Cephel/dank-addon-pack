<Ui xsi:schemaLocation="http://www.blizzard.com/wow/ui/">

	<Script file="post_frame.lua"/>

	<Frame name="AuxSellFrame" parent="AuxFrame" hidden="true">
        <Anchors>
            <Anchor point="TOPLEFT"><Offset><AbsDimension x="0" y="0"/></Offset></Anchor>
            <Anchor point="BOTTOMRIGHT"><Offset><AbsDimension x="0" y="0"/></Offset></Anchor>
        </Anchors>
		<Frames>
            <Frame name="AuxSellInventory" inherits="AuxFrameBoxTemplate">
                <Size><AbsDimension x="260" y="326"/></Size>
                <Anchors><Anchor point="TOPLEFT"><Offset><AbsDimension x="5" y="-35"/></Offset></Anchor></Anchors>
                <Scripts>
                    <OnLoad>
                        this:SetBackdropBorderColor(0.4, 0.4, 0.4)
                        this:SetBackdropColor(0.15, 0.15, 0.15)
                        getglobal(this:GetName().."Title"):SetText('Inventory')
                    </OnLoad>
                </Scripts>
                <Frames>
                    <Frame name="$parentListing">
                        <Anchors>
                            <Anchor point="TOPLEFT"><Offset><AbsDimension x="0" y="0"/></Offset></Anchor>
                            <Anchor point="BOTTOM"><Offset><AbsDimension x="0" y="0"/></Offset></Anchor>
                        </Anchors>
                        <Scripts>
                            <OnLoad>
                                local config = Aux.sell.inventory_listing_config
                                local sort_order = Aux.util.map(config.sort_order, function(column_order) return { column = config.columns[column_order.column], sort_ascending = column_order.order == 'ascending' } end)
                                this.sheet = Aux.sheet.create(this, config.columns, sort_order, config.row_setter, config.on_row_click, config.on_row_enter, config.on_row_leave)
                            </OnLoad>
                        </Scripts>
                    </Frame>
                </Frames>
            </Frame>
			<frame name="AuxSellParameters" inherits="AuxFrameBoxTemplate">
				<Size><AbsDimension x="213" y="326"/></Size>
                <Anchors><Anchor point="TOPLEFT" relativePoint="TOPRIGHT" relativeTo="AuxSellInventory"><Offset><AbsDimension x="0" y="0"/></Offset></Anchor></Anchors>
                <Scripts>
                    <OnLoad>
                        this:SetBackdropBorderColor(0.4, 0.4, 0.4)
                        this:SetBackdropColor(0.15, 0.15, 0.15)
                        getglobal(this:GetName().."Title"):SetText('Parameters')
                    </OnLoad>
                </Scripts>
                <Layers>
                    <Layer level="BACKGROUND">
                        <FontString name="$parentDepositLabel" inherits="GameFontNormal" text="Deposit:">
                            <Anchors><Anchor point="TOPLEFT"><Offset><AbsDimension x="14" y="-255"/></Offset></Anchor></Anchors>
                        </FontString>
                    </Layer>
                </Layers>
				<frames>
                    <Frame name="$parentItem" inherits="AuxItemTemplate">
                        <Anchors><Anchor point="TOPLEFT"><Offset><AbsDimension x="10" y="-10"/></Offset></Anchor></Anchors>
                    </Frame>
                    <Slider name="AuxSellStackSizeSlider" inherits="AuxSliderTemplate">
                        <Anchors><Anchor point="TOPLEFT"><Offset><AbsDimension x="10" y="-70"/></Offset></Anchor></Anchors>
                        <Scripts>
                            <OnValueChanged>
                                Aux.sell.quantity_update()
                            </OnValueChanged>
                        </Scripts>
                    </Slider>
                    <Slider name="AuxSellStackCountSlider" inherits="AuxSliderTemplate">
                        <Anchors><Anchor point="TOPLEFT"><Offset><AbsDimension x="10" y="-100"/></Offset></Anchor></Anchors>
                        <Scripts>
                            <OnValueChanged>
                                Aux.sell.quantity_update()
                            </OnValueChanged>
                        </Scripts>
                    </Slider>
					<EditBox name="AuxSellStackSize" letters="3" numeric="true" autoFocus="false" inherits="InputBoxTemplate">
						<Size><AbsDimension x="30" y="16"/></Size>
						<Anchors><Anchor point="LEFT" relativePoint="RIGHT" relativeTo="AuxSellStackSizeSlider"><Offset><AbsDimension x="10" y="0"/></Offset></Anchor></Anchors>
						<Scripts>
							<OnTextChanged>
                                if AuxSellStackSizeSlider.charge_classes then
                                    local charge_slider_value = Aux.util.index_of(this:GetNumber(), AuxSellStackSizeSlider.charge_classes)
                                    if charge_slider_value then
                                        AuxSellStackSizeSlider:SetValue(charge_slider_value)
                                    end
                                else
                                    AuxSellStackSizeSlider:SetValue(this:GetNumber())
                                end
								Aux.sell.quantity_update()
							</OnTextChanged>
							<OnTabPressed>
		<!-- 						if (IsShiftKeyDown()) then
									getglobal(this:GetParent():GetName().."BuyoutPriceCopper"):SetFocus();
								else
									getglobal(this:GetParent():GetName().."StackCount"):SetFocus();
								end -->
							</OnTabPressed>
							<OnEditFocusLost>
								this:HighlightText(0, 0)
							</OnEditFocusLost>
							<OnEditFocusGained>
								this:HighlightText()
							</OnEditFocusGained>
						</Scripts>
					</EditBox>
					<EditBox name="AuxSellStackCount" numeric="true" autoFocus="false" inherits="InputBoxTemplate">
						<Size><AbsDimension x="30" y="16"/></Size>
						<Anchors><Anchor point="LEFT" relativePoint="RIGHT" relativeTo="AuxSellStackCountSlider"><Offset><AbsDimension x="10" y="0"/></Offset></Anchor></Anchors>
						<Scripts>
							<OnTextChanged>
								if AuxSellStackCountSlider.charge_classes then
									local index = Aux.util.index_of(this:GetNumber(), AuxSellStackCountSlider.charge_classes)
									if index then
										AuxSellStackCountSlider:SetValue(index)
									end
								else
									AuxSellStackCountSlider:SetValue(this:GetNumber())
								end
                                Aux.sell.quantity_update()
							</OnTextChanged>
							<OnTabPressed>
		<!-- 						if (IsShiftKeyDown()) then
									getglobal(this:GetParent():GetName().."StackSize"):SetFocus();
								else
									getglobal(this:GetParent():GetName().."StartPriceGold"):SetFocus();
								end -->
							</OnTabPressed>
							<OnEditFocusLost>
								this:HighlightText(0, 0)
							</OnEditFocusLost>
							<OnEditFocusGained>
								this:HighlightText()
							</OnEditFocusGained>
						</Scripts>
					</EditBox>
                    <CheckButton name="$parentShortDurationRadio" inherits="AuxRadioButtonTemplate">
                        <Anchors><Anchor point="TOPLEFT"><Offset><AbsDimension x="11" y="-143"/></Offset></Anchor></Anchors>
                        <layers>
                            <layer level="BACKGROUND">
                                <FontString name="$parentDurationText" inherits="GameFontNormalSmall" text="Duration">
                                    <Anchors><Anchor point="BOTTOMLEFT" relativePoint="TOPLEFT"><Offset><AbsDimension x="3" y="4"/></Offset></Anchor></Anchors>
                                </FontString>
                            </layer>
                        </layers>
                        <Scripts>
                            <OnLoad>
                                getglobal(this:GetName().."Text"):SetText("2h")
                            </OnLoad>
                            <OnClick>
                                Aux.sell.duration_radio_button_on_click(1)
                            </OnClick>
                        </Scripts>
                    </CheckButton>
                    <CheckButton name="$parentMediumDurationRadio" inherits="AuxRadioButtonTemplate">
                        <Anchors><Anchor point="LEFT" relativeTo="$parentShortDurationRadio" relativePoint="RIGHT"><Offset><AbsDimension x="30" y="0"/></Offset></Anchor></Anchors>
                        <Scripts>
                            <OnLoad>
                                getglobal(this:GetName()..'Text'):SetText("8h")
                            </OnLoad>
                            <OnClick>
                                Aux.sell.duration_radio_button_on_click(2)
                            </OnClick>
                        </Scripts>
                    </CheckButton>
                    <CheckButton name="$parentLongDurationRadio" inherits="AuxRadioButtonTemplate">
                        <Anchors><Anchor point="LEFT" relativeTo="$parentMediumDurationRadio" relativePoint="RIGHT"><Offset><AbsDimension x="30" y="0"/></Offset></Anchor></Anchors>
                        <Scripts>
                            <OnLoad>
                                getglobal(this:GetName().."Text"):SetText("24h")
                            </OnLoad>
                            <OnClick>
                                Aux.sell.duration_radio_button_on_click(3)
                            </OnClick>
                        </Scripts>
                    </CheckButton>
                    <!--<Frame name="$parentStrategyDropDown" inherits="UIDropDownMenuTemplate">-->
                        <!--<Anchors><Anchor point="TOPLEFT"><Offset><AbsDimension x="-11" y="-180" /></Offset></Anchor></Anchors>-->
                        <!--<Layers>-->
                            <!--<Layer level="BACKGROUND">-->
                                <!--<FontString name="$parentLabel" inherits="GameFontNormalSmall" text="Suggestion Based On">-->
                                    <!--<Anchors><Anchor point="BOTTOMLEFT" relativePoint="TOPLEFT"><Offset><AbsDimension x="21" y="0"/></Offset></Anchor></Anchors>-->
                                <!--</FontString>-->
                                <!--<FontString name="$parentStaleWarning" inherits="GameFontRedSmall">-->
                                    <!--<Anchors><Anchor point="LEFT" relativePoint="RIGHT"><Offset><AbsDimension x="-6" y="3"/></Offset></Anchor></Anchors>-->
                                <!--</FontString>-->
                            <!--</Layer>-->
                        <!--</Layers>-->
                        <!--<Scripts>-->
                            <!--<OnLoad>-->
                                <!--UIDropDownMenu_SetWidth(100)-->
                                <!--UIDropDownMenu_Initialize(this, Aux.sell.initialize_strategy_dropdown)-->
                            <!--</OnLoad>-->
                            <!--<OnShow>-->
                                <!--UIDropDownMenu_Initialize(this, Aux.sell.initialize_strategy_dropdown)-->
                            <!--</OnShow>-->
                        <!--</Scripts>-->
                    <!--</Frame>-->
                    <Frame name="$parentStartPrice" inherits="MoneyInputFrameTemplate">
                        <Anchors><Anchor point="TOPLEFT"><Offset><AbsDimension x="16" y="-181"/></Offset></Anchor></Anchors>
                        <layers>
                            <Layer level="ARTWORK">
                                <FontString name="$parentText" inherits="GameFontNormalSmall" text="STARTING_PRICE">
                                    <Anchors><Anchor point="TOPLEFT"><Offset><AbsDimension x="-3" y="12"/></Offset></Anchor></Anchors>
                                </FontString>
                            </Layer>
                        </layers>
                        <Scripts>
                            <OnLoad>
                                MoneyInputFrame_SetOnvalueChangedFunc(this, Aux.sell.validate_parameters)
                            </OnLoad>
                        </Scripts>
                    </Frame>
                    <Frame name="$parentBuyoutPrice" inherits="MoneyInputFrameTemplate">
                        <Anchors><Anchor point="TOPLEFT"><Offset><AbsDimension x="16" y="-216"/></Offset></Anchor></Anchors>
                        <layers>
                            <Layer level="OVERLAY">
                                <FontString name="$parentText" inherits="GameFontNormalSmall" text="Buyout Price |cff808080(optional)|r">
                                    <Anchors><Anchor point="TOPLEFT"><Offset><AbsDimension x="-3" y="12"/></Offset></Anchor></Anchors>
                                </FontString>
                                <FontString name="$parentErrorText" inherits="GameFontRedSmall" text="AUCTION_BUYOUT_ERROR">
                                    <Anchors><Anchor point="TOPLEFT"><Offset><AbsDimension x="-3" y="23"/></Offset></Anchor></Anchors>
                                </FontString>
                            </Layer>
                        </layers>
                        <Scripts>
                            <OnLoad>
                                MoneyInputFrame_SetOnvalueChangedFunc(this, Aux.sell.validate_parameters)
                            </OnLoad>
                        </Scripts>
                    </Frame>
                    <Frame name="$parentDepositMoneyFrame" inherits="SmallMoneyFrameTemplate">
                        <Anchors><Anchor point="LEFT" relativePoint="RIGHT" relativeTo="$parentDepositLabel"><Offset><AbsDimension x="5" y="0"/></Offset></Anchor></Anchors>
                        <Scripts>
                            <OnLoad>
                                SmallMoneyFrame_OnLoad()
                                MoneyFrame_SetType('STATIC')
                            </OnLoad>
                        </Scripts>
                    </Frame>
                    <Button name="$parentPostButton" inherits="UIPanelButtonTemplate" text="Post">
                        <Size><AbsDimension x="90" y="26"/></Size>
                        <Anchors><Anchor point="BOTTOMLEFT" ><Offset><AbsDimension x="8" y="15"/></Offset></Anchor></Anchors>
                        <Scripts>
                            <OnClick>
                                Aux.sell.post_auctions()
                            </OnClick>
                        </Scripts>
                    </Button>
                    <Button name="$parentRefreshButton" inherits="UIPanelButtonTemplate" text="Refresh">
                        <Size><AbsDimension x="90" y="26"/></Size>
                        <Anchors><Anchor point="LEFT" relativePoint="RIGHT" relativeTo="$parentPostButton"><Offset><AbsDimension x="5" y="0"/></Offset></Anchor></Anchors>
                        <Scripts>
                            <OnClick>
                                AuxSellParametersRefreshButton_OnClick()
                            </OnClick>
                        </Scripts>
                    </Button>
				</frames>
			</frame>
            <Frame name="AuxSellAuctions" inherits="AuxFrameBoxTemplate">
                <Size><AbsDimension x="361" y="326"/></Size>
                <Anchors><Anchor point="TOPLEFT" relativePoint="TOPRIGHT" relativeTo="AuxSellParameters"><Offset><AbsDimension x="0" y="0"/></Offset></Anchor></Anchors>
                <Scripts>
                    <OnLoad>
                        this:SetBackdropBorderColor(0.4, 0.4, 0.4)
                        this:SetBackdropColor(0.15, 0.15, 0.15)
                        getglobal(this:GetName().."Title"):SetText('Existing Auctions')
                    </OnLoad>
                </Scripts>
                <Frames>
                <Frame name="$parentListing">
                    <Anchors>
                        <Anchor point="TOPLEFT"><Offset><AbsDimension x="0" y="0"/></Offset></Anchor>
                        <Anchor point="BOTTOM"><Offset><AbsDimension x="0" y="0"/></Offset></Anchor>
                    </Anchors>
                    <Scripts>
                        <OnLoad>
                            local config = Aux.sell.auction_listing_config
                            local sort_order = Aux.util.map(config.sort_order, function(column_order) return { column = config.columns[column_order.column], sort_ascending = column_order.order == 'ascending' } end)
                            this.sheet = Aux.sheet.create(this, config.columns, sort_order, config.row_setter, config.on_cell_click, config.on_cell_enter, config.on_cell_leave)
                        </OnLoad>
                    </Scripts>
                </Frame>
                </Frames>
            </Frame>
		</Frames>
	</Frame>
</Ui>
